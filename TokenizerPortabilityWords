\ Preamble words to aid portability

 ( G: do nothing )
 : NOOP ( S: -- )
    ;

 ( G: the traditional COUNT )
 : C@+ ( S: addr -- addr+1 char )
    DUP CHAR+ SWAP C@ ;

 ( G: refill the input buffer if there isn't a word available )
 : REFILL? ( S: -- 0|~0 )
    BEGIN
      >IN @ BL WORD SWAP >IN ! C@ DUP 0= WHILE
        DROP REFILL DUP WHILE
          DROP
      REPEAT
    THEN ;
 \ This will fail on systems that do ABORT as soon as WORD comes up empty.

 ( G: In case DEFER IS is not present, it's provided. )
 : NOGOOD -1 ABORT" uninitialised DEFER" ;
 : DEFER ( S: "name" -- )
    CREATE ['] NOGOOD ,
    DOES> @ EXECUTE ;
 : (IS) ( S: "name" xt -- )
    ' >BODY ! ;
 : [IS] ( C: "name" -- ) ( S: xt addr -- )
    ' >BODY POSTPONE LITERAL POSTPONE ! ; IMMEDIATE
 \ : (IS) POSTPONE IS ;
 \ : [IS] POSTPONE IS ; IMMEDIATE

 ( G: bump counter and return new value )
 : NEXT-ITEM ( S: addr -- n )
    1 OVER +! @ ;

 ( G: NUMBER? detects only single-cell numbers in current base )
 : NUMBER? ( S: c-addr len -- f )
    OVER C@ [CHAR] - = IF 1 /STRING THEN
    0 0 2SWAP >NUMBER 0= NIP NIP NIP ;

 ( G: save counted string in data space, use C@+ in place of COUNT )
 : SAVE-STRING ( S: ca len -- addr )
    HERE DUP >R OVER C, CHAR+ SWAP CHARS DUP ALLOT MOVE R> ;
 ( G: save next word without consuming it )
 : SAVE-WORD ( S: "word" -- addr "word" )
    >IN @ BL WORD COUNT SAVE-STRING SWAP >IN ! ;
